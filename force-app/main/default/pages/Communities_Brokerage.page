<apex:page docType="html-5.0" showHeader="false" applyHtmlTag="false" applyBodyTag="false" standardStylesheets="false" controller="Communities_Brokerage" lightningstylesheets="true">
    <apex:composition template="Communities_Base">
        
        <apex:define name="content">
            <apex:form id="portal">
                <apex:actionFunction action="{!loadSubscriptions}" name="loadSubscriptions" reRender="portal" />
                
                <c:Bootstrap_Resources />
                
                <div class="row" id="loading-block">
                    <div class="col-xs-4 col-xs-offset-4 col-md-2 col-md-offset-5">
                        <div class="progress progress-striped active">
                            <div class="progress-bar" style="width: 100%"></div>
                        </div>
                    </div>
                </div>
                
                <script>
                var loading_block = $("#loading-block");
                </script>
                
                <apex:outputPanel layout="none" rendered="{!initialLoad}">
                    <script>$(loadSubscriptions)</script>
                    </apex:outputPanel>
                    
                    <apex:outputPanel layout="none" rendered="{!!initialLoad && hasError}" >
                        <div id="error-block" style="display: none;">
                            <div class="alert alert-danger">
                                <p>Weâ€™re sorry. The connection has timed out.</p>
                                <p>If this issue persists, please contact the Customer Support Center for assistance at 1-844-55-BRIGHT (1-844-552-7444) or via email at <a href="mailto:support@brightmls.com">support@brightmls.com</a>.</p>
                                                                                                                                         <apex:outputPanel layout="none" rendered="{!debugMode}" >
                                                                                                                                         <div><apex:pageMessages /></div>
                                                                                                                                         </apex:outputPanel>
                                                                                                                                         </div>
                                                                                                                                         <div class="row" style="margin-top: 30px;">
                                                                                                                                         <div class="col-md-2 col-md-offset-5">
                                                                                                                                         <div class="btn-group btn-group-justified">
                                                                                                                                         <a href="{!cancelUrl}" class="btn btn-primary" role="button">Back</a>
                                                                                                                                         </div>
                                                                                                                                         </div>
                                                                                                                                         </div>
                                                                                                                                         
                                                                                                                                         <script>
                                                                                                                                         loading_block.hide();
                    $("#error-block").show();
                    </script>
                </div>
            </apex:outputPanel>
            
            <apex:outputPanel layout="none" rendered="{!!initialLoad && !hasError}" >
                <style>
                    #subscription-option-modal .dropdown {
                    padding-top: 20px;
                    }
                    
                    #subscription-option-modal .dropdown > button {
                    width: 100%;
                    }
                    
                    #subscription-option-modal .dropdown > ul {
                    width: 100%;
                    }
                    
                    #subscription-option-modal .dropdown > ul > li {
                    text-align: center;
                    }
                    .jumbotron p {
                    font-size: 17px;
                    }
                    .jumbotron {
                    padding-top: 10px;
                    padding-bottom: 20px;
                    }
                </style>
                
                <div id="content-block" style="display: none;">
                    <div class="jumbotron landing_instructions">
                        <!-- <p>Want to review your current office roster? Need to make changes? Update your office information using the options below.</p> -->
                        <p>Need to review your current office roster, view your data licensing products, pay fees for your office or agents? You can do that and more from your My Brokerage tab. Choose from the options below:</p>
                        <apex:outputPanel layout="none" rendered="{!debugMode}" >
                            <div><apex:pageMessages /></div>
                        </apex:outputPanel>
                    </div>
                    
                    <div class="row action-panels"></div>
                    <div class="modal fade" id="subscription-option-modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                    <h4 class="modal-title" id="modal-label"></h4>
                                </div>
                                <div class="modal-body">
                                    <p>Please select the Subscription ID you wish to review.</p>
                                    <select class="form-control"></select>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary" onclick="openSubscription();">Continue</button>
                                </div>
                            </div><!-- /.modal-content -->
                        </div><!-- /.modal-dialog -->
                    </div><!-- /.modal -->                      
                    
                    <script>
                    markOptionPanel("brokerage");
                    
                    var debug_ids = [
                        "3051894",
                        "3051893",
                        "3051891"
                    ];
                    
                    var options = {
                        office_roster: {
                            icon: "sign-in",
                            text: "Office Roster",
                            description: "View active and inactive agents as well as manage terminations.",
                            ids: [],
                            url: "Communities_OfficeRoster"
                        },
                        Office_Exclusives: {
                            icon: "home",
                            text: "Office Exclusives by your Brokerage",
                            description: "View Office Exclusives submitted to Bright by agents from your office(s).",
                            ids: [],
                            url: "Communities_OfficeExclusives"
                        },
                         office_accuracy: {
                            icon: "file-text",
                            text: "Broker Office Accuracy Notifications",
                            description: "View Details of all violations and fines for your brokerage/office.",
                            ids: [],
                            url: "Communities_OfficeAccuracy"
                        },
                        w9_form: {
                            icon: "file-text",
                            text: "W-9 Forms",
                            description: "Submit a W-9 Form to Bright MLS or check on an existing record for reference.",
                            ids: [],
                            url: "Communities_w9form"
                        },
                        office_information: {
                            icon: "shield",
                            text: "Office Information",
                            description: "Change your office phone number or company address.",
                            ids: [],
                            url: "Communities_OfficeDetails"
                        } ,
                        Broker_Hierarchy_Form: {
                            icon: "user",
                            text: "Brokerage Information",
                            description: "View Brand and Holding Company Information on file with Bright. ",
                            ids: [],
                            url:"Communities_BrokerHierarchy"
                        },
                        responsible_broker: {
                            icon: "user",
                           	text: "Assign Responsible Broker",
                            description: "Assign or remove a Responsible Broker on listings in your office(s) by state.",
                            ids: [],
                            url: "Communities_ResponsibleBroker"
                        } ,
                        Office_Manager: {
                            icon: "user",
                           	text: "Office Managers",
                            description: "Assign or remove an Office Manager for your office(s).",
                            ids: [],
                            url: "Communities_OfficeManager"
                        } ,
                        office_statement: {
                            icon: "money",
                            text: "Office Statement",
                            description: "The Office Billing Statement Information will indicate by Subscription and Office any balance due and oldest invoice date.",
                            ids: [],
                            url: "Communities_OfficeStatement"
                        } ,
                        new_applications: {
                            icon: "file-text",
                            text: "New Applications",
                            description: "Approve or decline applications for subscribers who want to join your office(s).",
                            ids: [],
                            url: "Communities_NewApplications"
                        }, 
                        transfer_requests: {
                            icon: "arrow-right",
                            text: "Agent Transfer Requests",
                            description: "Approve or decline transfer requests for subscribers who want to transfer to your office(s).",
                            ids: [],
                            url: "Communities_AgentTransferListing"
                        },
                        authorized_signers: {
                            icon: "user",
                            text: "Authorized Signers",
                            description: "Add or remove authorized signers who have the ability to make decisions, including approving or denying application requests, for your office(s).",
                            ids: [],
                            url: "Communities_AuthorizedSigners"
                        },
                        Communication_Preferences: {
                            icon: "envelope",
                            text: "Communication Preferences",
                            description: "Manage the emails you receive from Bright.",
                            ids: [],
                            url: "Communities_BrokerNews"
                        },                                
                        datalicensing_fees: {
                            icon: "money",
                            text: "Brokerage Data Licensing Fees",
                            description: "Pay your data licensing fees for your brokerage/office website.",
                            ids: [],
                            url: "Communities_PayBrokerageBalances"
                        },                                
                        datalicensing_products: {
                            icon: "briefcase",
                            text: "Data Licensing",
                            description: "View details on any data license(s) being used by your brokerage/office.",
                            ids: [],
                            url: "Communities_BrokerageDataLicensing"
                        },
                        brokerage_paymentmethods: {
                            icon: "credit-card",
                            text: "Brokerage Payment Methods",
                            description: "Set up the convenience of auto pay to pay Brokerage Fees",
                            ids: [],
                            url: "Communities_BrokeragePaymentMethods"
                        },
                        Listing_Transfer_Request: {
                            icon: "arrow-right",
                            text: "Listing Transfer Request",
                            description: "Approve or decline requests from subscribers wishing to transfer listings to or from your office(s).",
                            ids: [],
                            url:"Communities_ListingTransferRequests"                             
                        },
                        Broker_Authorization_Form: {
                            icon: "file-text",
                            text: "IDX and VOW Agent Request Forms",
                            description: "Review all the agent IDX and VOW requests submitted to your office that require approval.",
                            ids: [],
                            url:"Communities_ListingBroker"
                        },
                        
                       
                        
                    };
                    var optionNames = [];
                    </script>
                    
                    <apex:repeat value="{!Subscriptions}" var="s">
                        <script>
                        options["{!s.Category}"].ids.push("{!s.Id}");
                        optionNames["{!s.Id}"] = "{!s.displayText}";
                        </script>
                    </apex:repeat>
                    
                    <script>
                    var serviceJurisdiction = "{!serviceJurisdiction}";
                    var hasBOR = "{!hasBOR}";
                    var isJSMLS = "{!isJSMLS}";
                    var panels = $(".action-panels");
                    panels.empty();
                    
                    for (i in options) {
                        var option = options[i];
                        console.log(option.text);
                        
                        //if(isTrendLogin == 'true' && option.text == 'Office Roster') 
                        //    options[i].url = 'Communities_TrendOfficeRoster';
                        
                        //if(serviceJurisdiction == 'TREND' && option.text == 'Office Information') 
                        //    options[i].url = 'Communities_TrendOfficeInformation';
                        
                        if(serviceJurisdiction == 'TREND' && option.text == 'Agent Transfer Requests') 
                            continue;
                        
                        
                        
                        /*if(serviceJurisdiction == 'BRIGHT' && option.text == 'New Applications') 
                                    continue; */
                                
                                
                                
                                if(hasBOR == 'false' && option.text == 'Authorized Signers') 
                                    continue;
                                
                                /*if(isJSMLS == 'true'
                                  && (option.text == 'New Applications'
                                  || option.text == 'Agent Transfer Requests' 
                                  || option.text == 'Brokerage Data Licensing Fees'
                                  || option.text == 'Data Licensing'
                                  || option.text == 'Brokerage Payment Methods'
                                  || option.text == 'Listing Transfer Request')){
                                    console.log('--isJSMLS-->'+isJSMLS+'--option.text-->'+option.text);
                                }else{*/
                                panels.append(String.format('<div class="col-sm-6 col-md-4"><a href="#" onclick="selectOption(\'{0}\'); return false;"><h4><i class="fa fa-{1} fa-2x"></i>{2}</h4><p>{3}</p></a></div>',
                                                            i,
                                                            option.icon,
                                                            option.text,
                                                            option.description
                                                           ));
                                continue;
                                //}
                            }
                        
                        loading_block.hide();
                        $("#content-block").show();
                        init_action_panels();
                        
                        var modal = $("#subscription-option-modal");
                        
                        function selectOption(option) {
                            modal.find("#modal-label").text(options[option].text);
                            
                            modal.find("button.btn-primary")
                            .attr("option-target", option)
                            .attr("disabled", "disabled");
                            
                            var dropdown = modal.find("select");
                            
                            dropdown.empty();
                            
                            dropdown.append('<option>Select a Subscription</option>');
                            
                            var ids = options[option].ids;
                            for (i in ids)
                                dropdown.append(String.format('<option subscription-target="{0}">{1}</option>',
                                                              ids[i],
                                                              optionNames[ids[i]]
                                                             ));
                            
                            if (ids.length == 1) {
                                dropdown.find("option[subscription-target]").attr("selected", "selected");
                                openSubscription();
                            }
                            else
                                modal.modal("show");
                        }
                        
                        function selectSubscription() {
                            var selected = modal.find("select option:selected");
                            
                            if (selected.length != 1 || selected.attr("subscription-target") == null)
                                modal.find("button.btn-primary").attr("disabled", "disabled");
                            else
                                modal.find("button.btn-primary").removeAttr("disabled");
                        }
                        
                        modal.find("select").change(selectSubscription);
                        
                        function openSubscription() {
                            modal.modal("hide");
                            
                            var option = modal.find("button.btn-primary").attr("option-target");
                            var selected = modal.find("select option:selected");
                            
                            if(options[option].text == 'Office Information')
                                window.location.href = options[option].url + "?sid=" + selected.attr("subscription-target");
                            
                            else if(options[option].text == 'Data Licensing')
                                window.location.href = options[option].url + "?id=" + selected.attr("subscription-target")+"&brokerage=true";
                            
                                else if(options[option].text == 'IDX and VOW Agent Request Forms'){
                                    debugger;
                                    window.location.href = options[option].url + "?sid=" + selected.attr("subscription-target");
                                }   
                                    else
                                        window.location.href = options[option].url + "?id=" + selected.attr("subscription-target");
                        }
                        </script>
                        
                    </div>
            </apex:outputPanel>
        </apex:form>
    </apex:define>
</apex:composition> 
</apex:page>