<apex:page Controller="Communities_Case_Controller" id="thePg" showHeader="false" sidebar="false" standardStylesheets="false" docType="html-5.0" applyBodyTag="false"  lightningstylesheets="true">
        <apex:define name="content" >
            <style>
                #progressbar{
                height: 8px;
                position: absolute;
                left: 40%;
                top: 220px;
                width: 300px;
                background: #dfdfdf;
                border-radius: 10px;
                margin: -20px 0 0 -100px;
                padding: 2px;
                }
                #loading{
                transition: all 500ms ease;
                height: 4px;
                width: calc(100% - 0px);
                border-radius: 8px;
                background: #fe4602;
                position: absolute;
                margin: 0px;
                display: inline-block;
                animation: load 4s ease infinite;
                }
                #load{
                font-family: Arial;
                font-weight: bold;
                text-align: center;
                margin-top: 10px;
                }
                
                @keyframes load{
                0%{
                width: 2%;
                }
                10%{
                width: 10%;
                }
                }
                a.valuetop{ top:64px;cursor:auto;}
                .valuetop1{ top: 29px;right: -104px;color: #00a7b0;font-size: 12px; cursor:pointer; }
                .panel-heading a:hover, .panel-heading a:focus{ text-decoration:none; color:#000;}
                .panel-title{ font-weight:bold;font-size: 14px;}
                a[bubbletooltip]:link, a[bubbletooltip]:visited
                {
                text-decoration: none;
                position: relative;
                color : red; 
                }
                
                a[bubbletooltip]:before
                {
                content: "";
                position: absolute;
                border-right: 21px solid #c8eff1;
                border-top: 21px solid transparent;
                border-bottom: 21px solid transparent;
                visibility: hidden;
                bottom: -12px;
                right: 8px;
                }
                
                a[bubbletooltip]:after, .newtop:after
                {
                position: absolute;
                content: attr(bubbletooltip);
                font-weight:bold;
                right: -122px;
                bottom: -45px;
                width:140px;
                background: #c8eff1;
                color: #00a7b0;
                padding: 20px 10px;
                -moz-border-radius: 2px;
                -webkit-border-radius:2px;
                -khtml-border-radius:2px;
                border-radius: 2px;
                visibility: hidden;
                }
                
                a[bubbletooltip]:before, a[bubbletooltip]:after
                {
                visibility: visible;
                -moz-transition: visibility 0s linear .3s;
                }
                
                
                
                .form-group span {
                font-weight:bold;
                }
                a {
                color:#e33636;
                text-decoration:none;
                }
                a:hover {
                color:red;
                }
                #communities-definition-component-title{ margin-bottom:0 !important;}
                #content-container{margin-bottom:0 !important}
                .KB{margin:40px 0 0 20px;}
                .panel-default>.panel-heading{ background:none; border:none;padding-left: 0; }
                .panel-group .panel{border: none; border-bottom: 1px solid #ddd;box-shadow: none;border-radius: inherit;}
                .panel-group .panel-heading+.panel-collapse .panel-body{border: none;    padding-left: 0;}
                #errorMessage {
                color:red;
                }
                /* style class to vertically centered the boostrap modal popup */
                .modal-vertical-centered {76
                transform: translate(0, 50%) !important;
                -ms-transform: translate(0, 50%) !important; /* IE 9 */
                -webkit-transform: translate(0, 50%) !important; /* Safari and Chrome */
                }
                .newtop{ position:relative; background:#c8eff1; color:#00a7b0; padding:15px; width:600px;}
                .newtop p{    font-size: 14px;
                line-height: 20px;
                font-weight: 400;
                font-family: 'Lato', sans-serif;}
                .newtop ul{ padding:0 0 0 15px; list-style:circle;    font-size: 14px;
                line-height: 20px;
                font-weight: 400;
                font-family: 'Lato', sans-serif;}
                .newtop span{ position: absolute;
                right:4px;
                top: 4px;}
                .newtop:before {
                content: "";
                position: absolute;
                border-right: 21px solid #c8eff1;
                border-top: 21px solid transparent;
                border-bottom: 21px solid transparent;
                left: -18px;
                }
            </style>
            <script>
            var caseId;     // Capture the case id after case submitted succesfully
            var fileId = 1; // Current file processing
            
            /* Function to display issue type when compliance department selected */
            function checkCompliance(value) {
                
                if (value == "Compliance") {
                    jQuery('#issue_type_div').show();
                }
                else {
                    jQuery('#issue_type_div').hide();
                    jQuery('.issue_type').val('');
                }
                if(value=="Off-MLS Listings") {
                    jQuery('#offMLSListings_type_div').show();
                    jQuery('#offMLSListings1_type_div').show();
                    jQuery('#offMLSListings2_type_div').show();
                    jQuery('#offMLSListings3_type_div').hide();
                    //document.getElementById("myFile").required = true;
                    jQuery('#tooltipoffmls').show();
                    jQuery('#tooltip').hide();
                    updateSearchKey("Off-MLS");
                    
                }
                else {
                    jQuery('#offMLSListings_type_div').hide();
                    jQuery('.off').val('');
                    jQuery('#offMLSListings1_type_div').hide();
                    jQuery('.agentlist').val('');
                    jQuery('#offMLSListings2_type_div').hide();
                    jQuery('.brok').val('');
                    jQuery('#offMLSListings3_type_div').show();
                    jQuery('.offMLSListings3_type_div').val('');
                    jQuery('#tooltipoffmls').hide();
                    jQuery('#tooltip').show();
                    updateSearchKey("");
                }
                
            }
            
            /* Validate and remote calls function to submit a case and attachments */
            function validateData(){
                var vError = '';
                var subId, dept, issue, desc, mls, ordId, ordUrl, off, brok, agentlist, filesContainer;
                
                $(".form-control").each(function() {
                    
                    /* Validating field values */
                    var id = this.id;
                    if (id.indexOf("subId") >= 0) {
                        if ($(this).val() != '')
                            subId = $(this).val();
                        else
                            vError = vError + "* Please select Subscription<br/>";
                    }
                    
                    
                    if (id.indexOf("dept") >= 0) {
                        if ($(this).val() != '' && $(this).val() != 'None') {
                            dept = $(this).val();   
                        }
                        else 
                           
                            vError = vError + "* Please select Inquiry Type<br/>";
                    }
                        
                    
                    if(dept == 'Off-MLS Listings'){
                        if (id.indexOf("off") >= 0) {
                            if ($(this).val() != '') { 
                                off= $(this).val();
                            }
                            else
                                vError = vError + "* Please enter Property Address<br/>";
                        }
                        
                        if (id.indexOf("agentlist") >= 0) {
                            if ($(this).val() != '') { 
                                agentlist= $(this).val();
                            }
                            else
                                vError = vError + "* Please enter Listing Agent Name<br/>";
                        }
                        
                        
                        if (id.indexOf("brok") >= 0) {
                            if ($(this).val() != '') { 
                                brok= $(this).val();
                            }
                            else
                                vError = vError + "* Please enter Brokerage Name<br/>";
                        }
                        
                        if (id == "filecount") {
                            //var previousFileId = $("#filecount").val();
                            var files = document.getElementById('1').files; 
                            if (!files[0]) {
                                vError = vError + "* Please attach the evidence for Off MLS Listing<br/>";
                            }
                        }
                    } 
                    
                    console.log('----id-->',id);
                    if(id.indexOf("ordId") >= 0) {
                        
                        if ($(this).text() != ''){
                            ordId = $(this).text();
                        }
                    }
                    
                    if (id.indexOf("ordUrl") >= 0) {
                        console.log('--->'+$(this).val()+'--'+$(this).text()+'--'+$(this).html());
                        if ($(this).val() != ''){
                            ordUrl = $(this).val();
                            ordId = ordId+', URL: '+ordUrl;
                        }   
                    }
                    
                    if (id.indexOf("desc") >= 0) {
                        if ($(this).val() != ''){
                            desc = $(this).val();
                        }
                        else
                            vError = vError + "* Please enter Description<br/>";
                    }
                    
                    if (id.indexOf("issue") >= 0) 
                        issue= $(this).val();
                    
                    if (id.indexOf("mls") >= 0) 
                        mls= $(this).val();                                               
                });
                
                
                if(ordId != null && ordId != '' && ordId != 'undefined')
                    desc = 'OrderId: '+ordId+',\n'+desc; 
                
                if (dept == "Compliance" && issue == '')
                    vError = vError + "* Please select issue type<br/>";
                
                if (vError != '') {
                    $("#errorMessage").html(vError);
                    return false;
                }
                
                /* Bootstrap modal popup display and the parameters are to disable the background click */
                var modal = $("#subscription-option-modal");
                modal.modal({
                    backdrop: 'static',
                    keyboard: false
                })
                modal.modal("show"); 
                
                /* Remote call to submit case */
                
                var prop = jQuery('.off').val();
                var listAgent = jQuery('.agentlist').val();
                var brok = jQuery('.brok').val();
                Communities_Case_Controller.remoteCreateCase(subId, dept, issue, desc, mls, prop, listAgent, brok, function(result,event){
                    
                    if (event.status == true) {
                        /* Case result success message */
                        caseId = result;
                        $(".caseResult").html("<center>Case submitted successfully</center><br/>");
                        $(".uploadBox").show();
                        
                        /* Displaying list of attachments with intial status */
                        var html = "Uploading attachments. Please Wait ...<br/><br/><table width='100%' cellspacing='10' cellpadding='5' style='backgound-color:#cccccc;'>";
                        for(var i=0; i<parseInt($("#filecount").val()); i++) {
                            
                            if (document.getElementById(i) != null) {
                                
                                /* Calculate size of attachment */
                                var displaySize;
                                if(document.getElementById(i).files[0].size < 1000000){
                                    displaySize = Math.floor(document.getElementById(i).files[0].size/1000) + 'K';
                                }else{
                                    displaySize  = Math.round((document.getElementById(i).files[0].size / 1000000)*10)/10 + 'MB';
                                }
                                
                                html = html + "<tr>";
                                html = html + "<td style='padding:3px;'>" + document.getElementById(i).files[0].name + "</td>";
                                html = html + "<td>" + displaySize + "</td>";
                                html = html + "<td id='status_"+i+"'> Pending </td>";
                                html = html + "</tr>";
                                
                            }
                            
                        }
                        html = html + "</table>";
                        $(".uploadBox").html(html);
                        
                        /* File upload process start */
                        prepareFileUploads(fileId);                    
                    }
                    else {
                        alert("Failed to submit case: " + event.message);
                    }
                    
                });            
            }
            
            markOptionPanel("support");
            
            var byteChunkArray; 
            var files;
            var currentFile;
            var $upload;
            var CHUNK_SIZE = 180000; //Must be evenly divisible by 3, if not, data corruption will occur
            var VIEW_URL = '/servlet/servlet.FileDownload?file=';
            
            /* Executes when start Upload button is selected */
            function prepareFileUploads(id) {
                /* Checking if atachment id exists or not */
                if (document.getElementById(id) != null) {
                    /* Get the file(s) from the input field */
                    files = document.getElementById(id).files;
                    
                    /* Only proceed if there are files selected and if null it would be end of attachments */
                    if(files.length == 0){
                        window.parent.location = 'https://dev-dev-dev.cs10.force.com/CaseManagement/s/';
                        return;
                    }     
                     
                    /* Updating status to processing file in file listing */
                    $("#status_"+id).html('Processing');
                    
                    /* Once elements have been added to the page representing the uploads, start the actual upload process */
                    checkForUploads();  
                }
                else {
                    /* If not process next attachment */
                    fileId = parseInt(fileId) + 1;
                    prepareFileUploads(fileId);       
                }
            }
            
            function checkForUploads() {
                /* Based on index of the div, get correct file from files array */
                currentFile = files[0];
                
                /* 
                        Build the byteChunkArray array for the current file we are processing. This array is formatted as:
                        ['0-179999','180000-359999',etc] and represents the chunks of bytes that will be uploaded individually.
                    */
                
                byteChunkArray = new Array();  
                
                /* First check to see if file size is less than the chunk size, if so first and only chunk is entire size of file */
                if(currentFile.size <= CHUNK_SIZE) {
                    byteChunkArray[0] = '0-' + (currentFile.size - 1);
                }else{
                    /* Determine how many whole byte chunks make up the file */
                    var numOfFullChunks = Math.floor(currentFile.size / CHUNK_SIZE); // i.e. 1.2MB file would be 1000000 / CHUNK_SIZE
                    var remainderBytes = currentFile.size % CHUNK_SIZE; // would determine remainder of 1200000 bytes that is not a full chunk
                    var startByte = 0;
                    var endByte = CHUNK_SIZE - 1;
                    
                    /* Loop through the number of full chunks and build the byteChunkArray array */
                    for(i = 0; i < numOfFullChunks; i++) {
                        byteChunkArray[i] = startByte+'-'+endByte;
                        
                        /* Set new start and stop bytes for next iteration of loop */
                        startByte = endByte + 1;
                        endByte += CHUNK_SIZE;
                    }
                    
                    /* Add the last chunk of remaining bytes to the byteChunkArray */
                    startByte = currentFile.size - remainderBytes;
                    endByte = currentFile.size;
                    byteChunkArray.push(startByte+'-'+endByte);
                }
                
                /* 
                        Start processing the byteChunkArray for the current file, parameter is '' because this is the first chunk 
                        being uploaded and there is no attachment Id
                    */
                
                processByteChunkArray('');
                
                
            }
            
            /* Uploads a chunk of bytes, if attachmentId is passed in it will attach the bytes to an existing attachment record */      
                function processByteChunkArray(attachmentId) {
                    
                    /* Proceed if there are still values in the byteChunkArray, if none, all piece of the file have been uploaded */
                    if(byteChunkArray.length > 0) {
                    
                        /* Determine the byte range that needs to uploaded, if byteChunkArray is like... ['0-179999','180000-359999'] */
                        var indexes = byteChunkArray[0].split('-'); //... get the first index range '0-179999' -> ['0','179999']
                        var startByte = parseInt(indexes[0]);       //0
                        var stopByte = parseInt(indexes[1]);        //179999

                        /* Slice the part of the file we want to upload, currentFile variable is set in checkForUploads() method that is called before this method */
                        if(currentFile.webkitSlice) {
                            var blobChunk = currentFile.webkitSlice(startByte , stopByte + 1);
                        }else if (currentFile.mozSlice) {
                            var blobChunk = currentFile.mozSlice(startByte , stopByte + 1);
                        }else if (currentFile.slice) {
                            var blobChunk = currentFile.slice(startByte , stopByte + 1);
                        }

                        /* Create a new reader object, part of HTML5 File API */
                        var reader = new FileReader();

                        /* Read the blobChunk as a binary string, reader.onloadend function below is automatically called after this line */
                        reader.readAsArrayBuffer(blobChunk);

                        /* Create a reader.onload function, this will execute immediately after reader.readAsBinaryString() function above; */
                        reader.onloadend = function(evt) { 
                            if(evt.target.readyState == FileReader.DONE) {  
                                /*
                                    Make sure read was successful, DONE == 2
                                    Base 64 encode the data for transmission to the server with JS remoting, window.btoa currently on support by some browsers
                                */

                                var binary = "";
                                var bytes = new Uint8Array(evt.target.result);
                                var length = bytes.byteLength;

                                for (var i = 0; i < length; i++) {
                                    binary += String.fromCharCode(bytes[i]);
                                }
                                
                                /* Remote function call to start uploading process */
                                var dept = jQuery('.department');
                                dept = dept[0];
                                dept = dept.options[dept.options.selectedIndex].value;
                                Communities_Case_Controller.attachFile(caseId,attachmentId,currentFile.name,currentFile.type,window.btoa(binary),dept,function(result,event) {

                                    if (event.status == true) {
                                        
                                        /* Calculate percent uploaded and updating in files listing */
                                        var percentComplete = Math.round((stopByte / currentFile.size) * 100);
                                        $("#status_" + fileId).html(percentComplete + '%');

                                        /* Remove the index information from the byteChunkArray array for the piece just uploaded. */
                                        byteChunkArray.shift(); //removes 0 index

                                        /* Set the attachmentId of the file we are now processing */
                                        attachmentId = result;

                                        /* Call process byteChunkArray to upload the next piece of the file */
                                        processByteChunkArray(attachmentId);
                                        
                                        /* Update final status and start process next attachment */
                                        if(processByteChunkArray.length <= 0) {
                                            $("#status_" + fileId).html("Completed");
                                            fileId = parseInt(fileId) + 1;
                                            prepareFileUploads(fileId);
                                        }
                                    }
                                    else {
                                        /* Update failed status and start processing next attachment */
                                        $("#status_" + fileId).html("<span style='color:red;'>Failed: "+event.message+"</span>");
                                        fileId = parseInt(fileId) + 1;
                                        prepareFileUploads(fileId);                      
                                    }
                                });
                            }
                            else {
                                /* Error handling for bad read */
                                alert('Could not read file');
                            }
                        };

                    }else{
                        /* Update status for completed file and start processing next file */
                        $("#status_" + fileId).html("Completed");
                        fileId = parseInt(fileId) + 1;
                        prepareFileUploads(fileId);
                    }
                }  

            /* Function to add new input file element */
            function AddAnother() {
                var previousFileId = $("#filecount").val();
                var files = document.getElementById(previousFileId).files;
                
                if (files[0].size < 4000000) {
                    $("#" + previousFileId).hide();
                    $("#fileContainer" + previousFileId).append('<a onclick="DeleteAttachment('+previousFileId+')" class="glyphicon glyphicon-minus-sign"></a> &nbsp;' + files[0].name);
                    var filecount = parseInt($("#filecount").val()) + 1;
                    $("#filesContainer").append('<div style="margin-bottom:5px;" id="fileContainer'+filecount+'"><input class="filesclass" type="file" id="'+filecount+'" name="'+filecount+'" onchange="AddAnother()" /></div>');
                    $("#filecount").val(filecount);
                }
                else{
                    alert("Maximum upload size 4MB.");
                    $("#" + previousFileId).val('');
                }
            }
            
            /* Function to delete attachment from list */
            function DeleteAttachment(id) {
                $("#fileContainer"+id).remove();
            }
            
            
            
            </script>
            
            <c:Bootstrap_Resources /> 
            <apex:stylesheet value="{!URLFOR($Resource.Communities_Ideas,'/ideas_css.css')}"/>               
            <apex:form id="theForm">
                <apex:actionFunction name="updateSearchKey" action="{!updateSearchKey}" oncomplete="searchOncomplete();" reRender="theSearchResults,errorMessage">
                    <apex:param name="updatedKey" value=""/>
                </apex:actionFunction>
            </apex:form>        
            <div class="modal fade" id="subscription-option-modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
                <div class="modal-dialog modal-vertical-centered">
                    <div class="modal-content">
                        <div class="modal-body">
                            <div class="caseResult">
                                Please wait while case is being submitted.<br/><br/>
                                <div class="row" id="loading-block">
                                    <div class="col-xs-4 col-xs-offset-4 col-md-2 col-md-offset-5">
                                        <div class="progress progress-striped active">
                                            <div class="progress-bar" style="width: 100%">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="uploadBox" style="display:none;">
                                <div class="row" id="loading-block">
                                    <div class="col-xs-4 col-xs-offset-4 col-md-2 col-md-offset-5">
                                        <div class="progress progress-striped active">
                                            <div class="progress-bar" style="width: 100%">
                                            </div>
                                        </div>
                                    </div>
                                </div>                        
                            </div>                        
                        </div>     
                    </div>
                </div>
            </div>            
            
            
            <!--Page Title Start-->
            <c:Communities_Definition pageTitle="Submit New Case" pageTitleClass="fa fa-envelope-o fa-2x" hasDefinitions="false">
                <p><b class="term">Term</b> Definition goes here.</p>
            </c:Communities_Definition>
            
            <div class="col-sm-6" style="padding:20px 0px;border-right: 1px solid #00A7B0;">
                <!--Form Start-->
                <apex:form styleClass="form-horizontal post_your_idea" enctype="multipart/form-data" id="form" onsubmit="return false;">  
                    
                    <apex:outputPanel id="MyPanel">
                        
                    </apex:outputPanel>
                    <div class="form-group">
                        <label for="" class="col-sm-2 control-label"></label>
                        <div class="col-sm-8">
                            <div id="errorMessage"></div>
                        </div>
                    </div> 
                    
                    <div class="form-group">
                        <span class="col-sm-3 control-label"><font color="red">*</font> Subscription</span> 
                        <div class="col-sm-6">
                            <apex:selectList value="{!newCase.Subscription_ID__c}" styleClass="form-control" id="subId" size="1">
                                <apex:selectOptions value="{!subscriptionOptions}"></apex:selectOptions>
                            </apex:selectList>
                        </div>
                    </div>                   
                    
                    <div class="form-group">    
                        <span for="" class="col-sm-3 control-label"><font color="red">*</font> Inquiry Type</span> 
                        <div class="col-sm-6">
                            <!--<apex:inputField value="{!newCase.Department__c}" id="dept" styleClass="form-control department" onchange="checkCompliance(this.value)" /> -->
                            <apex:selectList value="{!createCaseSelDepart}" label="depart" id="dept" styleClass="form-control department" size="1" onchange="checkCompliance(this.value)">
                                <apex:selectOptions value="{!createCaseDeparts}"></apex:selectOptions>
                                <!--<apex:commandLink action="/Communities_Cases_Create?department=OFFMLS" Target="_blank" value="Not My Product" />-->
                                    
                            </apex:selectList>
                        </div>
                    </div>
                    
                    
                    
                    
                    <div class="form-group" id="issue_type_div" style='display:none;'>
                        <span for="" class="col-sm-3 control-label"><font color="red">*</font> Issue Type</span> 
                        <div class="col-sm-6">
                            <apex:selectList value="{!complianceRecordType}" id="issue" styleClass="form-control issue_type" size="1">
                                <apex:selectOptions value="{!complianceTypes}"></apex:selectOptions>
                            </apex:selectList>
                        </div>
                    </div>
                    
                    <div class="form-group" id="offMLSListings_type_div" style='display:none;'>
                        <span for="" class="col-sm-3 control-label"><font color="red">*</font> Property Address</span>
                        <div class="col-sm-6">
                            <apex:inputTextarea styleClass="form-control off" id="off" rows="4"/>
                        </div>
                    </div>
                    
                    <div class="form-group" id="offMLSListings1_type_div" style='display:none;'>
                        <span for="" class="col-sm-3 control-label"><font color="red">*</font> Listing Agent Name</span>
                        <div class="col-sm-6">
                            <apex:inputTextarea styleClass="form-control agentlist" id="agentlist" rows="1"/>
                        </div>
                    </div>
                    
                    <div class="form-group" id="offMLSListings2_type_div" style='display:none;'>
                        <span for="" class="col-sm-3 control-label">
                            <font color="red">*</font> Brokerage Name</span>
                        <div class="col-sm-6">
                            <apex:inputTextarea styleClass="form-control brok" id="brok" rows="1" onkeyup="checkLimit(this,this.form.countdown,10);"/>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <span for="" class="col-sm-3 control-label"><font color="red">*</font> How can we assist you?</span>
                        <div class="col-sm-6">
                            <apex:inputTextarea styleClass="form-control" id="desc" rows="7" onkeyup="updateSearchKeyHelper(value);" value="{!newCase.MRIS_Connect_Description__c}"/>
                        </div>
                        
                        
                        <div id="tooltip" class="col-sm-3" >
                            <a class="valuetop" href="#" bubbletooltip="Start typing to see related article on the right side"></a>
                            <span id="tooltipclose" class="valuetop1 glyphicon glyphicon-remove"></span>
                        </div>
                        
                        
                        <div id="tooltipoffmls" class="col-sm-3" style='display:none;'>
                            <div class="valuetop newtop" href="#">
                                
                                <p>
                                    Bright requires documentation of the alleged violation. Please upload a file or image reflecting the public marketing of the property. This may include:                         
                                </p> 
                                <ul>
                                    <li>Photo of For Sale sign</li>
                                    
                                    <li>Copy of a screen shot showing the link to the site with the property on it</li>
                                    
                                    <li>Copy of flyer with the listing information</li>
                                    
                                    <li>Email blast solicitation</li>
                                    
                                    <li>Screen shot of listing appearing on a private network.</li>
                                </ul>
                                <span id="tooltipclose1" class="valuetop1 glyphicon glyphicon-remove"></span>
                            </div>
                            
                            
                        </div>
                        
                    </div>
                    
                    
                    <apex:outputPanel rendered="{!if(productOrd.id != null, true, false)}">
                        <div class="form-group">
                            <span for="" class="col-sm-3 control-label">ProductOrder ID</span> 
                            <div class="col-sm-8" >
                                <apex:outputText styleClass="form-control" id="ordId" value="{!productOrd.Name}"/><!--form-control-->
                            </div>
                            
                        </div>
                        
                        <div class="form-group">
                            <span for="" class="col-sm-3 control-label"> URL</span> 
                            <div class="col-sm-8">
                                <apex:inputText styleClass="form-control" id="ordUrl" value="{!productOrd.URL__c}" />
                            </div>
                        </div>
                    </apex:outputPanel>
                    
                    <div class="form-group" id="offMLSListings3_type_div" >
                        <span for="" class="col-sm-3 control-label">MLS # (if applicable)</span>
                        <div class="col-sm-6">
                            <apex:inputField value="{!newCase.MLS_Number__c}" id="mls" styleClass="form-control" /> 
                        </div>
                    </div>          
                    
                    <div class="form-group">
                        <span for="" class="col-sm-3 control-label">
                            Add Attachment(s)
                            <input type="hidden" name="filecount" id="filecount" value="1" class="form-control"/>
                        </span>
                        
                        <div class="col-sm-8" style="padding-top:7px;" id="filesContainer">
                            <div id="fileContainer1" style="margin-bottom:5px;">
                                <input class="filesclass" type="file" id="1" name="file" onchange="AddAnother()" required = 'true' />
                            </div>
                        </div>            
                    </div>
                    
                    <div class="form-group">
                        <span for="" class="col-sm-3 control-label"> &nbsp;</span>
                        <div class="col-sm-6">
                            <apex:outputLink value="https://dev-dev-dev.cs10.force.com/CaseManagement/s/" styleClass="btn btn-default" style="margin-right:10px">Cancel</apex:outputLink> 
                            <apex:outputLink value="#" styleClass="btn btn-primary" onclick="validateData()">Submit Case</apex:outputLink>
                        </div>
                    </div>
                </apex:form>
                <!--Form Start-->
            </div>
            <!--           
<div class="col-sm-4" style="border: 1px solid #ccc; border-radius: 7px; padding-top:10px; padding-bottom:10px;">
<h4><span class="glyphicon glyphicon-thumbs-up"></span> Help</h4>
<ul style="-webkit-padding-start: 20px;">
<li>Fields marked with an asterisk (<font color="red">*</font>) are required for case submission.<br/><br/></li>
<li> To submit a case, first please select a topic that best describes the nature of your inquiry and provide us with a short description of how we can assist you.<br/><br/></li>
<li>If your case involves a listing, please provide the MLS number.<br/><br/></li>
<li>Attachments may be added to your case by using the Browse button and selecting the file(s) you wish to upload.<br/><br/></li>
<li>More than one file may be attached to a case.<br/><br/></li>
<li>Maximum file size can not exceed 4MB.<br/><br/></li>
<li>When you are finished, please select “Submit Case.” A team member will be in touch as soon as possible.</li>
</ul> 
</div>
-->
            <apex:panelGroup id="theSearchResults">
                <div class="col-sm-6" style=" border-radius: 7px; padding-top:10px; padding-bottom:10px;margin-top: 10px;">
                    <!--<h4 style="font-weight:400;margin-left:20px;color:#00a7b0;"><span class="glyphicon glyphicon-file"></span>&nbsp;Suggested Articles to help resolve your case</h4>-->
                    <h4 style="font-weight:400;margin-left:20px;color:#00a7b0;">Here are some popular articles to help you</h4>
                    
                    <div class="KB">
                        <div class="panel-group" id="accordion">
                            <knowledge:articleList articleVar="article" id="articles" keyword="{!searchKey}" hasMoreVar="hasMore">  
                                <div class="panel panel-default" > 
                                    <div id="articleHeadId" class="panel-heading" >
                                        <h4 class="panel-title">
                                            <!--<a data-toggle="collapse" data-parent="#accordion" href="#collapse-{!article.Id}"><span class="glyphicon glyphicon-plus" style="margin-right: 8px;"></span></a>
<a data-parent="#accordion" Target="_blank" href="{!$Label.LearnBrightMlsCommURL}/article/{!article.URLname}">{!article.title}</a>                                      
-->
                                            <a id="atid-{!article.Id}" data-toggle="collapse" data-parent="#accordion" href="#collapse-{!article.Id}"><span id="spt" class="glyphicon glyphicon-plus" style="margin-right: 8px;"></span>
                                                {!article.title} </a>
                                            
                                        </h4>
                                    </div>
                                    <div id="collapse-{!article.Id}" class="panel-collapse collapse">
                                        <div class="panel-body">
                                            <!--<p>{!article.abstract}</p>-->
                                            <apex:outputText value="{!left(article.abstract, 300)}"></apex:outputText> {!if(len(article.abstract) > 300, "..","")}
                                            <a Target="_blank" href="{!$Label.LearnBrightMlsCommURL}/article/{!article.URLname}">Read full article</a>
                                        </div>
                                    </div>
                                </div>
                                <!--<apex:outputText rendered="{!!hasMore}">
no articles 
</apex:outputText>-->
                                <script>
                                $(document).ready(function(){
                                   
                                    $("#tooltipclose").click(function(){
                                        $("#tooltip").hide();
                                        
                                    });
                                    $("#tooltipclose1").click(function(){
                                        $("#tooltipoffmls").hide();
                                        
                                    });
                                    
                                    $('#atid-{!article.Id}').click(function() {
                                        $("#spt", this).toggleClass("glyphicon-plus glyphicon-remove");
                                    });
                                    
                                });
                                
                                function searchOncomplete(){
                                    
                                    var articleExist = document.getElementById("articleHeadId");
                                    console.log('--head--',articleExist); 
                                    if(articleExist == null)
                                        document.getElementById("messageId").style.display = 'block';
                                    else
                                        document.getElementById("messageId").style.display = 'none';
                                }
                                
                                
                                </script>
                                
                            </knowledge:articleList>
                            
                        </div>
                    </div>
                    <div id="messageId" style="display: none; margin-left: 20px;" class="form-group">
                        <h4 style="border-radius: 7px; padding-top: 10px; padding-bottom: 10px; margin-top: 10px; color: orange;">Sorry, no related articles found!</h4>
                    </div>
                    <!--<div id="progressbar">
<span id="loading"></span>
<div id="load"> Fetching related articles...</div>
</div>-->
                </div>
            </apex:panelGroup>
                        
            
        </apex:define>
    <script>
     if('{!dept}' == 'OFFMLS'){
         checkCompliance('Off-MLS Listings');
     }
    function updateSearchKeyHelper(value){
                var dept = jQuery('.department').val();
                if(dept!="Off-MLS Listings"){
                    updateSearchKey(value);
                }
            }
    </script>
</apex:page>